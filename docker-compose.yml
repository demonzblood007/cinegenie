version: '3.8'

services:
  # FastAPI Backend
  backend:
    build: .
    container_name: movie-continuation-backend
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - REDIS_URL=redis://redis:6379
      - QDRANT_URL=http://qdrant:6333
    env_file:
      - .env
    volumes:
      - ./output:/app/output
      - ./data:/app/data
      - ./temp:/app/temp
    depends_on:
      - redis
      - qdrant
    restart: unless-stopped
    networks:
      - movie-network

  # Streamlit Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: movie-continuation-frontend
    ports:
      - "8501:8501"
    environment:
      - API_BASE_URL=http://backend:8000
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - movie-network

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: movie-continuation-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - movie-network

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: movie-continuation-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    restart: unless-stopped
    networks:
      - movie-network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: movie-continuation-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    networks:
      - movie-network

volumes:
  redis_data:
  qdrant_data:

networks:
  movie-network:
    driver: bridge 